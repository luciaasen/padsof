package p5.test;
import p5.*;

/**
 * Esta clase hace un test del funcionamiento de la clase MyAdjustableTime
 * Al implementar Observer y AdjustableTime, y extender de la implementada DefaultPropertyObersver,
 * testeando esta clase comprobamos el funcionamiento de todas las clases implementadas
 * @author lucia
 *
 */
public class Apartado1 {
	public static void main(String[] args){
		MyAdjustableTime v1 = new MyAdjustableTime(5);
		System.out.println("Value 1: " + v1);
		try{
			MyAdjustableTime v2 = new MyAdjustableTime(-5);
		}catch(IllegalArgumentException e){
			System.out.println("Exception caught: No se creo un MyAdjustableTime v2 con value < 0");
		}
		MyAdjustableTime v2 = new MyAdjustableTime(4);
		MyAdjustableTime v3 = new MyAdjustableTime(3);
		System.out.println("Value 2: " + v2 + "Value 3: " + v3);
		System.out.println("Probamos getValue. v1: " + v1.getValue() + ". v2: " + v2.getValue() + ". v3: " + v3.getValue());
		
		v1.addObserver(v2);
		System.out.println("Aniadimos v2 como observador de v1; v2: " + v2.getValue());
		v2.addObserver(v3);
		System.out.println("Aniadimos v3 como observador de v2; v3: " + v3.getValue());
		
		MyAdjustableTime v4 = new MyAdjustableTime(6);
		v1.addObserver(v4);
		System.out.println("Creamos v4: " + v4.getValue() + " y aniadimos a v1 como observer " + v1.getValue());
		v1.removeObserver(v2);
		System.out.println("Quitamos v2 de observer de v1: " + v1.getValue());
		
		
		System.out.println("PropertyChanged es probada con los add/removeObserver y con incrementTime");
		
	}
}
