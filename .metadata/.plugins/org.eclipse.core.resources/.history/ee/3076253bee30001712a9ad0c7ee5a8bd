/**

 * 
 */
package icfs;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SpringLayout;

/**
 * @author lucia
 *
 */
public class DatePanel extends JPanel{
	private JComboBox day, month;
	private JTextField year;
	
	public DatePanel(String s){
		super();		
		JLabel label = new JLabel(s);
		
		String[] month =   { "January", "February", "March", "April", "May", "June", "July", "August", "September",
	            			"October", "November", "December"       };
		JComboBox<String> monthC= new JComboBox<String>(month);
		this.month = monthC;
		
		int index = monthC.getSelectedIndex();
		ArrayList<Integer> days = new ArrayList();
		for(int i = 1; i <= 28; i++){
			days.add(i);
		}			
		if(index!=1){
			days.add(29);
			days.add(30);			
			if(!(index == 3 || index == 5 || index == 9 || index == 11)){
				days.add(31);
			}				
		}		
		Integer[] day = days.toArray(new Integer[days.size()]);
		JComboBox<Integer> dayC = new JComboBox<Integer>(day);
		this.day = dayC;
		
		JTextField year = new JTextField();
		this.year = year;
		
		SpringLayout layout = new SpringLayout();
		layout.putConstraint(SpringLayout.NORTH, label, 0, SpringLayout.SOUTH, this);
		layout.putConstraint(SpringLayout.NORTH, monthC, 0, SpringLayout.SOUTH, this);
		layout.putConstraint(SpringLayout.NORTH, dayC, 0, SpringLayout.SOUTH, this);
		layout.putConstraint(SpringLayout.NORTH, year, 0, SpringLayout.SOUTH, this);
		layout.putConstraint(SpringLayout.WEST, label, 0, SpringLayout.WEST, this);
		layout.putConstraint(SpringLayout.WEST, dayC, 10, SpringLayout.WEST, label);
		layout.putConstraint(SpringLayout.WEST, monthC, 10, SpringLayout.WEST, dayC);
		layout.putConstraint(SpringLayout.WEST, year, 10, SpringLayout.WEST, monthC);
	}
	
	public LocalDate getDate() throws NumberFormatException{
		int day = this.day.getSelectedIndex();
		int month = this.month.getSelectedIndex();
		int year = Integer.parseInt(this.year.getText());
		
		return LocalDate.of(year, month, day);
	}
	
}
