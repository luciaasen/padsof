/**
 * 
 */
package moon.course.tests;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

/**
 * @author lucia
 *
 */
public class CourseTest {

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
	}

	/**
	 * Test method for {@link moon.course.Course#Course(java.lang.String)}.
	 */
	@Test
	public void testCourse() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#calcAverage()}.
	 */
	@Test
	public void testCalcAverage() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#calcNPasses()}.
	 */
	@Test
	public void testCalcNPasses() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#calcNFails()}.
	 */
	@Test
	public void testCalcNFails() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getCourseMark(moon.user.Student)}.
	 */
	@Test
	public void testGetCourseMark() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getMCourse(moon.user.Student)}.
	 */
	@Test
	public void testGetMCourse() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getStudents()}.
	 */
	@Test
	public void testGetStudents() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#addStudent(moon.user.Student)}.
	 */
	@Test
	public void testAddStudent() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#expelStudent(moon.user.Student)}.
	 */
	@Test
	public void testExpelStudent() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#readmitStudent(moon.user.Student)}.
	 */
	@Test
	public void testReadmitStudent() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#addApplication(moon.user.Application)}.
	 */
	@Test
	public void testAddApplication() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#removeApplication(moon.user.Application)}.
	 */
	@Test
	public void testRemoveApplication() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#isExpelled(moon.user.Student)}.
	 */
	@Test
	public void testIsExpelled() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#addUnit(moon.course.Unit)}.
	 */
	@Test
	public void testAddUnit() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#addMark(moon.mark.MCourse)}.
	 */
	@Test
	public void testAddMark() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getName()}.
	 */
	@Test
	public void testGetName() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#setName(java.lang.String)}.
	 */
	@Test
	public void testSetName() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getUnits()}.
	 */
	@Test
	public void testGetUnits() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getExpStudents()}.
	 */
	@Test
	public void testGetExpStudents() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getStudentMarks()}.
	 */
	@Test
	public void testGetStudentMarks() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getApplications()}.
	 */
	@Test
	public void testGetApplications() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link moon.course.Course#getExercises()}.
	 */
	@Test
	public void testGetExercises() {
		fail("Not yet implemented");
	}

}
